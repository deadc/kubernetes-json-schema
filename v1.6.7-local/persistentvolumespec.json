{
  "description": "PersistentVolumeSpec is the specification of a persistent volume.",
  "properties": {
    "accessModes": {
      "description": "AccessModes contains all ways the volume can be mounted. More info: http://kubernetes.io/docs/user-guide/persistent-volumes#access-modes",
      "type": "array",
      "items": {
        "type": "string"
      }
    },
    "awsElasticBlockStore": {
      "description": "AWSElasticBlockStore represents an AWS Disk resource that is attached to a kubelet's host machine and then exposed to the pod. More info: http://kubernetes.io/docs/user-guide/volumes#awselasticblockstore",
      "$ref": "#/definitions/io.k8s.kubernetes.pkg.api.v1.AWSElasticBlockStoreVolumeSource"
    },
    "azureDisk": {
      "description": "AzureDisk represents an Azure Data Disk mount on the host and bind mount to the pod.",
      "$ref": "#/definitions/io.k8s.kubernetes.pkg.api.v1.AzureDiskVolumeSource"
    },
    "azureFile": {
      "description": "AzureFile represents an Azure File Service mount on the host and bind mount to the pod.",
      "$ref": "#/definitions/io.k8s.kubernetes.pkg.api.v1.AzureFileVolumeSource"
    },
    "capacity": {
      "description": "A description of the persistent volume's resources and capacity. More info: http://kubernetes.io/docs/user-guide/persistent-volumes#capacity",
      "type": "object",
      "additionalProperties": {
        "$ref": "#/definitions/io.k8s.apimachinery.pkg.api.resource.Quantity"
      }
    },
    "cephfs": {
      "description": "CephFS represents a Ceph FS mount on the host that shares a pod's lifetime",
      "$ref": "#/definitions/io.k8s.kubernetes.pkg.api.v1.CephFSVolumeSource"
    },
    "cinder": {
      "description": "Cinder represents a cinder volume attached and mounted on kubelets host machine More info: http://releases.k8s.io/HEAD/examples/mysql-cinder-pd/README.md",
      "$ref": "#/definitions/io.k8s.kubernetes.pkg.api.v1.CinderVolumeSource"
    },
    "claimRef": {
      "description": "ClaimRef is part of a bi-directional binding between PersistentVolume and PersistentVolumeClaim. Expected to be non-nil when bound. claim.VolumeName is the authoritative bind between PV and PVC. More info: http://kubernetes.io/docs/user-guide/persistent-volumes#binding",
      "$ref": "#/definitions/io.k8s.kubernetes.pkg.api.v1.ObjectReference"
    },
    "fc": {
      "description": "FC represents a Fibre Channel resource that is attached to a kubelet's host machine and then exposed to the pod.",
      "$ref": "#/definitions/io.k8s.kubernetes.pkg.api.v1.FCVolumeSource"
    },
    "flexVolume": {
      "description": "FlexVolume represents a generic volume resource that is provisioned/attached using an exec based plugin. This is an alpha feature and may change in future.",
      "$ref": "#/definitions/io.k8s.kubernetes.pkg.api.v1.FlexVolumeSource"
    },
    "flocker": {
      "description": "Flocker represents a Flocker volume attached to a kubelet's host machine and exposed to the pod for its usage. This depends on the Flocker control service being running",
      "$ref": "#/definitions/io.k8s.kubernetes.pkg.api.v1.FlockerVolumeSource"
    },
    "gcePersistentDisk": {
      "description": "GCEPersistentDisk represents a GCE Disk resource that is attached to a kubelet's host machine and then exposed to the pod. Provisioned by an admin. More info: http://kubernetes.io/docs/user-guide/volumes#gcepersistentdisk",
      "$ref": "#/definitions/io.k8s.kubernetes.pkg.api.v1.GCEPersistentDiskVolumeSource"
    },
    "glusterfs": {
      "description": "Glusterfs represents a Glusterfs volume that is attached to a host and exposed to the pod. Provisioned by an admin. More info: http://releases.k8s.io/HEAD/examples/volumes/glusterfs/README.md",
      "$ref": "#/definitions/io.k8s.kubernetes.pkg.api.v1.GlusterfsVolumeSource"
    },
    "hostPath": {
      "description": "HostPath represents a directory on the host. Provisioned by a developer or tester. This is useful for single-node development and testing only! On-host storage is not supported in any way and WILL NOT WORK in a multi-node cluster. More info: http://kubernetes.io/docs/user-guide/volumes#hostpath",
      "$ref": "#/definitions/io.k8s.kubernetes.pkg.api.v1.HostPathVolumeSource"
    },
    "iscsi": {
      "description": "ISCSI represents an ISCSI Disk resource that is attached to a kubelet's host machine and then exposed to the pod. Provisioned by an admin.",
      "$ref": "#/definitions/io.k8s.kubernetes.pkg.api.v1.ISCSIVolumeSource"
    },
    "nfs": {
      "description": "NFS represents an NFS mount on the host. Provisioned by an admin. More info: http://kubernetes.io/docs/user-guide/volumes#nfs",
      "$ref": "#/definitions/io.k8s.kubernetes.pkg.api.v1.NFSVolumeSource"
    },
    "persistentVolumeReclaimPolicy": {
      "description": "What happens to a persistent volume when released from its claim. Valid options are Retain (default) and Recycle. Recycling must be supported by the volume plugin underlying this persistent volume. More info: http://kubernetes.io/docs/user-guide/persistent-volumes#recycling-policy",
      "type": "string"
    },
    "photonPersistentDisk": {
      "description": "PhotonPersistentDisk represents a PhotonController persistent disk attached and mounted on kubelets host machine",
      "$ref": "#/definitions/io.k8s.kubernetes.pkg.api.v1.PhotonPersistentDiskVolumeSource"
    },
    "portworxVolume": {
      "description": "PortworxVolume represents a portworx volume attached and mounted on kubelets host machine",
      "$ref": "#/definitions/io.k8s.kubernetes.pkg.api.v1.PortworxVolumeSource"
    },
    "quobyte": {
      "description": "Quobyte represents a Quobyte mount on the host that shares a pod's lifetime",
      "$ref": "#/definitions/io.k8s.kubernetes.pkg.api.v1.QuobyteVolumeSource"
    },
    "rbd": {
      "description": "RBD represents a Rados Block Device mount on the host that shares a pod's lifetime. More info: http://releases.k8s.io/HEAD/examples/volumes/rbd/README.md",
      "$ref": "#/definitions/io.k8s.kubernetes.pkg.api.v1.RBDVolumeSource"
    },
    "scaleIO": {
      "description": "ScaleIO represents a ScaleIO persistent volume attached and mounted on Kubernetes nodes.",
      "$ref": "#/definitions/io.k8s.kubernetes.pkg.api.v1.ScaleIOVolumeSource"
    },
    "storageClassName": {
      "description": "Name of StorageClass to which this persistent volume belongs. Empty value means that this volume does not belong to any StorageClass.",
      "type": "string"
    },
    "vsphereVolume": {
      "description": "VsphereVolume represents a vSphere volume attached and mounted on kubelets host machine",
      "$ref": "#/definitions/io.k8s.kubernetes.pkg.api.v1.VsphereVirtualDiskVolumeSource"
    }
  },
  "$schema": "http://json-schema.org/schema#",
  "type": "object"
}